{
    "pipes": [],
    "interfaces": [
        {
            "name": "Menu",
            "id": "interface-Menu-f0216d3075eae94152343b08a305c2b8",
            "file": "src/app/views/menu/menu.model.ts",
            "type": "interface",
            "sourceCode": "export interface Menu {\n    id: string\n    name: string\n    imagePath: string\n    description: string\n    price: number\n    restaurantId: string\n}\n",
            "properties": [
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imagePath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "restaurantId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Restaurant",
            "id": "interface-Restaurant-37cf24245ab6099f97a2b4e88a6321df",
            "file": "src/app/views/restaurants/restaurant-creat/restaurant.model.ts",
            "type": "interface",
            "sourceCode": "export interface Restaurant {\n    id: string\n    name: string\n    category: string\n    deliveryEstimate: string\n    rating: number\n    imagePath: string\n    about: string\n    hours: string\n}\n",
            "properties": [
                {
                    "name": "about",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "category",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "deliveryEstimate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "hours",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imagePath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "rating",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Review",
            "id": "interface-Review-aa7cb0bea019f900bc9d5f5030627ed6",
            "file": "src/app/views/reviews/reviews.model.ts",
            "type": "interface",
            "sourceCode": "export interface Review {\n    name: string\n    date: string\n    rating: number\n    comments: string\n    restaurantId: string\n}\n",
            "properties": [
                {
                    "name": "comments",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "date",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "rating",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "restaurantId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "MenuService",
            "id": "injectable-MenuService-a760fd9a29c5f5db46adc6f559ffec3f",
            "file": "src/app/views/menu/menu.service.ts",
            "properties": [
                {
                    "name": "httpOptions",
                    "defaultValue": "{\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [
                {
                    "name": "getByRestaurantId",
                    "args": [
                        {
                            "name": "restaurantId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Menu[]>",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "restaurantId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MEAT_API } from '../../app.api';\nimport { ErrorHandler } from '../../app.error-handler'\nimport { Menu } from './menu.model'\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MenuService {\n\n    constructor(private http: HttpClient) { }\n\n    httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }\n\n    getByRestaurantId(restaurantId: string): Observable<Menu[]> {\n        return this.http.get<Menu[]>(`${MEAT_API}/restaurants/${restaurantId}/menu`)\n            .pipe(\n                retry(2),\n                catchError(ErrorHandler.handleError))\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RestaurantService",
            "id": "injectable-RestaurantService-8cab9c40cf9fdbab03865f24d6e083e8",
            "file": "src/app/views/restaurants/restaurant.service.ts",
            "properties": [
                {
                    "name": "httpOptions",
                    "defaultValue": "{\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Restaurant[]>",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Restaurant>",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Restaurant } from './restaurant-creat/restaurant.model';\n\nimport { MEAT_API } from '../../app.api';\nimport { ErrorHandler } from '../../app.error-handler'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RestaurantService {\n\n    constructor(private http: HttpClient) { }\n\n    httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }\n\n    getAll(): Observable<Restaurant[]> {\n        return this.http.get<Restaurant[]>(`${MEAT_API}/restaurants`)\n            .pipe(\n                retry(2),\n                catchError(ErrorHandler.handleError))\n    }\n    getById(id: string): Observable<Restaurant> {\n        return this.http.get<Restaurant>(`${MEAT_API}/restaurants/${id}`)\n            .pipe(\n                retry(2),\n                catchError(ErrorHandler.handleError))\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ReviewsService",
            "id": "injectable-ReviewsService-2f3eb9f053225e6b831aceaf470e952c",
            "file": "src/app/views/reviews/reviews.service.ts",
            "properties": [
                {
                    "name": "httpOptions",
                    "defaultValue": "{\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "reviewId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Review[]>",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "reviewId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { MEAT_API } from '../../app.api';\nimport { ErrorHandler } from '../../app.error-handler';\n\nimport { Review } from './reviews.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ReviewsService {\n\n    constructor(private http: HttpClient) { }\n    httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }\n\n    getById(reviewId: string): Observable<Review[]> {\n        return this.http.get<Review[]>(`${MEAT_API}/restaurants/${reviewId}/reviews`)\n            .pipe(\n                retry(2),\n                catchError(ErrorHandler.handleError))\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ErrorHandler",
            "id": "class-ErrorHandler-2b3c3e41bc503554e9deb964fa5968c8",
            "file": "src/app/app.error-handler.ts",
            "type": "class",
            "sourceCode": "import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport class ErrorHandler {\n    static handleError(error: HttpErrorResponse | any) {\n        let errorMessage: string\n        if (error instanceof HttpErrorResponse) {\n            errorMessage = `Erro ${error.status} ao acessar a URL ${error.url} - ${error.statusText}`\n        } else {\n            errorMessage = error.toString()\n        }\n        console.log(errorMessage)\n        return Observable.throw(errorMessage)\n    }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse | any"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 5,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse | any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-8aca5e9ff82076b8d5031123279b0221",
            "file": "src/app/views/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "./about.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n    constructor() { }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n    margin: 20px;\n}\n",
                    "styleUrl": "./about.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "templateData": "<section>\n    <h1>Sistema Criado para fins de estudo</h1>\n    <p>\n        Nesse sistema aprendemos diversos conceitos do Angular, usando a\n        mais nova versão do Angular no momento, utilizando\n        os components do angularmaterial\n    </p>\n    <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n        sed do eiusmod tempor incididunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n        ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        Duis aute irure dolor in reprehenderit in voluptate velit\n        esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia\n        deserunt mollit anim id est laborum.\n    </p>\n    <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n        sed do eiusmod tempor incididunt ut labore et dolore magna\n        aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n        ullamco laboris nisi ut aliquip ex ea commodo consequat.\n        Duis aute irure dolor in reprehenderit in voluptate velit\n        esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia\n        deserunt mollit anim id est laborum.\n    </p>\n\n\n</section>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-48042879c4b0392652414003a596d2f9",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'helpper'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'helpper';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<app-toolbar></app-toolbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-2caeda1f0130073c9cbd6664416c15db",
            "file": "src/app/views/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n    constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "footer {\n    position: relative;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n\n    height: 60px;\n    background-color: #ffffff;\n    align-items: center;\n    justify-content: space-between;\n    display: flex;\n    flex-direction: row;\n\n    border-top: 1px solid #d2d6de;\n}\n\np {\n    font-family: \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial,\n        sans-serif;\n    font-weight: 400;\n    color: #444;\n\n    margin-right: 20px;\n    margin-left: 20px;\n}\n\n@media only screen and (max-width: 900px) {\n    footer {\n        height: 40px;\n    }\n    p {\n        font-size: 10px;\n    }\n}\n",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "templateData": "<footer>\n    <p><strong>Copyright © 2020</strong> Felipe Nascimento Santos</p>\n    <p class=\"version\"><strong>Version </strong>1.0.0</p>\n</footer>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-8a8f5caa2af852e385e44ec81eeace48",
            "file": "src/app/views/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  public Title: string;\n\n\n  constructor() {\n    this.Title = \"Meat\";\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n    width: 100%;\n    height: 90%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\nmat-card {\n    height: 500px;\n    margin-right: 20px;\n    margin-left: 20px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n}\nh1 {\n    font-size: 63px;\n    font-family: \"Source Sans Pro\", sans-serif;\n    color: inherit;\n}\nh6 {\n    font-size: 30px;\n    font-weight: 200;\n}\n\nbutton {\n    font-size: 20px;\n    padding: 15px;\n}\n\nbutton a {\n    text-decoration: none;\n    display: block;\n    color: #ffffff;\n    height: 100%;\n}\n\n@media only screen and (max-width: 900px) {\n    h1 {\n        font-size: 45px;\n        text-align: center;\n        line-height: 3rem;\n    }\n    h6 {\n        font-size: 20px;\n        text-align: center;\n    }\n}\n",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"container\">\n    <mat-card class=\"card\">\n        <h1>Bem Vindo ao Meat!</h1>\n        <h6>Está com fome? Peça e receba em casa.</h6>\n        <a [routerLink]=\"['/restaurants']\">\n            <button mat-raised-button color=\"warn\">Ver Restaurantes</button>\n        </a>\n    </mat-card>\n</div>\n"
        },
        {
            "name": "HomeStorie",
            "id": "component-HomeStorie-06370976ad0bc3f0678a297e0becb68c",
            "file": "src/app/views/home/stories/home.storie.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-storie",
            "styleUrls": [
                "./home.storie.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.storie.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-home-storie',\n    templateUrl: './home.storie.html',\n    styleUrls: ['./home.storie.css']\n})\nexport class HomeStorie {\n    public Title: string;\n\n\n    constructor() {\n        this.Title = \"Meat\";\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n    width: 100%;\n    height: 90%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\nmat-card {\n    height: 500px;\n    margin-right: 20px;\n    margin-left: 20px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n}\nh1 {\n    font-size: 63px;\n    font-family: \"Source Sans Pro\", sans-serif;\n    color: inherit;\n}\nh6 {\n    font-size: 30px;\n    font-weight: 200;\n}\n\nbutton {\n    font-size: 20px;\n    padding: 15px;\n}\n\nbutton a {\n    text-decoration: none;\n    display: block;\n    color: #ffffff;\n    height: 100%;\n}\n\n@media only screen and (max-width: 900px) {\n    h1 {\n        font-size: 45px;\n        text-align: center;\n        line-height: 3rem;\n    }\n    h6 {\n        font-size: 20px;\n        text-align: center;\n    }\n}\n",
                    "styleUrl": "./home.storie.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"container\">\n    <mat-card class=\"card\">\n        <h1>Bem Vindo ao Meat!</h1>\n        <h6>Está com fome? Peça e receba em casa.</h6>\n        <a>\n            <button mat-raised-button color=\"warn\">Ver Restaurantes</button>\n        </a>\n    </mat-card>\n</div>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-3a43faa7010711a0f40ac731067d8013",
            "file": "src/app/views/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [
                "./menu.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menus",
                    "defaultValue": "[]",
                    "type": "Menu[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nimport { Menu } from './menu.model';\nimport { MenuService } from './menu.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n    public menus: Menu[] = [];\n\n    constructor(private menuService: MenuService,\n        private route: ActivatedRoute) { }\n\n    ngOnInit(): void {\n        this.menuService\n            .getByRestaurantId(this.route.parent.snapshot.params['id'])\n            .subscribe(menu => this.menus = menu);\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 20px;\n}\n.content {\n    display: flex;\n    flex-direction: column;\n}\nimg {\n    float: left;\n    width: 100px;\n}\n\n@media only screen and (max-width: 900px) {\n    img {\n        float: left;\n        width: 70px;\n    }\n    h1 {\n        font-size: 18px;\n    }\n    h3 {\n        font-size: 15px;\n        color: #555;\n    }\n    .content {\n        margin-left: 10px;\n    }\n    .card {\n        height: auto;\n    }\n}\n",
                    "styleUrl": "./menu.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "menuService",
                        "type": "MenuService"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n    <div *ngFor=\"let menu of menus\">\n        <mat-card class=\"card\">\n            <img [src]=\"menu.imagePath\">\n            <div class=\"content\">\n                <h1>{{menu?.name}}</h1>\n                <h3>{{menu?.description}}</h3>\n                <h3>{{menu?.price | currency: 'BRL': true}}</h3>\n            </div>\n        </mat-card>\n    </div>\n</div>\n"
        },
        {
            "name": "MenuStorie",
            "id": "component-MenuStorie-2803ca4d5c77d38aacd53ce578dab557",
            "file": "src/app/views/menu/stories/menu.storie.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu-storie",
            "styleUrls": [
                "../menu.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "../menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menus",
                    "defaultValue": "[]",
                    "type": "Menu[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { Menu } from '../menu.model';\n\n\n@Component({\n    selector: 'app-menu-storie',\n    templateUrl: '../menu.component.html',\n    styleUrls: ['../menu.component.css']\n})\nexport class MenuStorie {\n    public menus: Menu[] = [];\n\n    constructor() { }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 20px;\n}\n.content {\n    display: flex;\n    flex-direction: column;\n}\nimg {\n    float: left;\n    width: 100px;\n}\n\n@media only screen and (max-width: 900px) {\n    img {\n        float: left;\n        width: 70px;\n    }\n    h1 {\n        font-size: 18px;\n    }\n    h3 {\n        font-size: 15px;\n        color: #555;\n    }\n    .content {\n        margin-left: 10px;\n    }\n    .card {\n        height: auto;\n    }\n}\n",
                    "styleUrl": "../menu.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "templateData": "<div class=\"container\">\n    <div *ngFor=\"let menu of menus\">\n        <mat-card class=\"card\">\n            <img [src]=\"menu.imagePath\">\n            <div class=\"content\">\n                <h1>{{menu?.name}}</h1>\n                <h3>{{menu?.description}}</h3>\n                <h3>{{menu?.price | currency: 'BRL': true}}</h3>\n            </div>\n        </mat-card>\n    </div>\n</div>\n"
        },
        {
            "name": "RestaurantCreatComponent",
            "id": "component-RestaurantCreatComponent-bbf602810a8b90787780476b60c7f9cc",
            "file": "src/app/views/restaurants/restaurant-creat/restaurant-creat.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-restaurant-creat",
            "styleUrls": [
                "./restaurant-creat.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./restaurant-creat.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "restaurant",
                    "line": 11,
                    "type": "Restaurant"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Restaurant } from './restaurant.model';\n\n@Component({\n    selector: 'app-restaurant-creat',\n    templateUrl: './restaurant-creat.component.html',\n    styleUrls: ['./restaurant-creat.component.css']\n})\nexport class RestaurantCreatComponent {\n\n    @Input() public restaurant: Restaurant\n    constructor() { }\n\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "a {\n    text-decoration: none;\n    display: block;\n    color: #555;\n}\n.container {\n    display: flex;\n    flex-direction: row;\n    width: 400px;\n}\n.content {\n    margin-left: 10px;\n    display: flex;\n    flex-direction: column;\n}\n.title {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: #555;\n    font-size: 18px;\n    font-weight: bold;\n}\nimg {\n    max-width: 100px;\n    max-height: 100px;\n}\n.card {\n    margin-right: 10px;\n    margin-top: 10px;\n}\n@media only screen and (max-width: 900px) {\n    h1 {\n        font-size: 15px;\n        color: #555;\n        font-weight: bold;\n        margin-right: 10px;\n    }\n    .title {\n        justify-content: stretch;\n    }\n    .container {\n        margin: 0;\n        display: flex;\n        flex-direction: row;\n        width: auto;\n    }\n    .content {\n        margin-left: 10px;\n    }\n    .card {\n        margin: 0;\n        margin-top: 0;\n        margin-bottom: 20px;\n        width: auto;\n\n        padding: 10px;\n    }\n}\n",
                    "styleUrl": "./restaurant-creat.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "templateData": "<mat-card class=\"card\">\n    <a [routerLink]=\"['/restaurants', restaurant.id]\">\n        <div class=\"container\">\n            <img [src]=\"restaurant.imagePath\" />\n\n            <div class=\"content\">\n                <div class=\"title\">\n                    <h1>{{restaurant.name | uppercase}}</h1>\n                    <h4>{{restaurant.rating}}</h4>\n                </div>\n                <p>{{restaurant.category}}</p>\n                <p>{{restaurant.deliveryEstimate}}</p>\n            </div>\n        </div>\n    </a>\n</mat-card>\n"
        },
        {
            "name": "RestaurantDetailComponent",
            "id": "component-RestaurantDetailComponent-e753a7bebb48a3dabe208b27088da136",
            "file": "src/app/views/restaurant-detail/restaurant-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-restaurant-detail",
            "styleUrls": [
                "./restaurant-detail.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./restaurant-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "restaurant",
                    "type": "Restaurant",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { Restaurant } from '../restaurants/restaurant-creat/restaurant.model';\nimport { RestaurantService } from '../restaurants/restaurant.service';\n\n@Component({\n    selector: 'app-restaurant-detail',\n    templateUrl: './restaurant-detail.component.html',\n    styleUrls: ['./restaurant-detail.component.css']\n})\nexport class RestaurantDetailComponent implements OnInit {\n\n    restaurant: Restaurant\n\n    constructor(private restaurantsService: RestaurantService,\n        private route: ActivatedRoute) { }\n\n    ngOnInit(): void {\n        this.restaurantsService.getById(this.route.snapshot.params['id'])\n            .subscribe(restaurant => this.restaurant = restaurant)\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\nimg {\n    width: 200px;\n}\nh1 {\n    color: #000;\n    font-size: 24px;\n}\nh3 {\n    color: #555;\n    font-size: 18px;\n}\n.card {\n    padding: 0;\n    margin: 20px;\n    display: flex;\n    flex-direction: column;\n}\n.toolbar {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n\n    margin: 0;\n}\n.toolbar a {\n    text-decoration: none;\n    display: block;\n    color: #555;\n    font-size: 14px;\n    font-weight: 400;\n    margin-top: 15px;\n\n    width: 100%;\n    text-align: center;\n}\n\n.detail-active {\n    border-bottom: 5px solid #f44336;\n}\n\n@media only screen and (max-width: 900px) {\n    h1 {\n        color: #000;\n        font-size: 14px;\n        margin: 0;\n        margin-left: 10px;\n    }\n    h3 {\n        color: #555;\n        font-size: 13px;\n        margin: 0;\n        margin-left: 10px;\n    }\n    img {\n        width: 100px;\n    }\n    .content {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 10px;\n    }\n}\n",
                    "styleUrl": "./restaurant-detail.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "restaurantsService",
                        "type": "RestaurantService"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "restaurantsService",
                        "type": "RestaurantService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"card\">\n    <div class=\"content\">\n        <img [src]=\"restaurant?.imagePath\" />\n        <div>\n            <h1>{{restaurant?.name}}</h1>\n            <h1>Categoria</h1>\n            <h3>{{restaurant?.category}}</h3>\n            <h1>Quem Somos</h1>\n            <h3>{{restaurant?.about}}</h3>\n            <h1>Horários</h1>\n            <h3>{{restaurant?.hours}}</h3>\n        </div>\n    </div>\n\n    <div class=\"toolbar\">\n        <a routerLinkActive=\"detail-active\" [routerLink]=\"['menu']\">\n            Menu\n        </a>\n        <a routerLinkActive=\"detail-active\" [routerLink]=\"['reviews']\">\n            Avaliações\n        </a>\n    </div>\n</mat-card>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "RestaurantsComponent",
            "id": "component-RestaurantsComponent-1507a90fe3726acc727b89f1b644dafe",
            "file": "src/app/views/restaurants/restaurants.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-restaurants",
            "styleUrls": [
                "./restaurants.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./restaurants.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "restaurants",
                    "type": "Restaurant[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { RestaurantService } from './restaurant.service';\n\nimport { Restaurant } from './restaurant-creat/restaurant.model'\n@Component({\n    selector: 'app-restaurants',\n    templateUrl: './restaurants.component.html',\n    styleUrls: ['./restaurants.component.css']\n})\nexport class RestaurantsComponent implements OnInit {\n\n    public restaurants: Restaurant[];\n\n    constructor(private restaurantService: RestaurantService) { }\n\n    ngOnInit(): void {\n        this.restaurantService.getAll().subscribe(restaurants =>\n            this.restaurants = restaurants\n        );\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1 {\n    margin: 20px;\n    font-size: 24px;\n    color: #555;\n}\n.container {\n    margin: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\n@media only screen and (max-width: 900px) {\n    h1 {\n        margin: 20px;\n        font-size: 15px;\n        color: #555;\n    }\n    .container {\n        display: flex;\n        flex-direction: column;\n\n        padding: 0;\n        margin-left: 20px;\n        margin-right: 20px;\n    }\n}\n",
                    "styleUrl": "./restaurants.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "restaurantService",
                        "type": "RestaurantService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "restaurantService",
                        "type": "RestaurantService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\n    <h1>Todos os Restaurantes</h1>\n    <div class=\"container\">\n        <div *ngFor=\"let restaurant of restaurants\">\n            <app-restaurant-creat [restaurant]=\"restaurant\"></app-restaurant-creat>\n        </div>\n    </div>\n</div>\n"
        },
        {
            "name": "ReviewsComponent",
            "id": "component-ReviewsComponent-ab469df04d65fc822abc72f1b25418b9",
            "file": "src/app/views/reviews/reviews.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reviews",
            "styleUrls": [
                "./reviews.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./reviews.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "reviews",
                    "type": "Review[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Review } from './reviews.model';\nimport { ReviewsService } from './reviews.service';\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n    selector: 'app-reviews',\n    templateUrl: './reviews.component.html',\n    styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n    public reviews: Review[];\n    constructor(private reviewService: ReviewsService,\n        private route: ActivatedRoute) { }\n\n    ngOnInit(): void {\n        this.reviewService\n            .getById(this.route.parent.snapshot.params['id'])\n            .subscribe(review => this.reviews = review);\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 10px;\n}\n\nimg {\n    width: 50px;\n    height: 50px;\n}\nh1 {\n    font-size: 18px;\n    margin-left: 10px;\n}\nh3 {\n    margin-top: -20px;\n    font-size: 12px;\n    margin-left: 10px;\n}\nh2 {\n    right: 0;\n    position: absolute;\n    margin-right: 20px;\n}\np {\n    font-size: 13px;\n}\n.content {\n    display: flex;\n    flex-direction: row;\n    margin-left: 10px;\n}\n",
                    "styleUrl": "./reviews.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "reviewService",
                        "type": "ReviewsService"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "reviewService",
                        "type": "ReviewsService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngFor=\"let review of reviews\">\n    <mat-card class=\"card\">\n        <div class=\"content\">\n            <img *ngIf=\"review.rating < 3\" alt=\"User Image\" src=\"assets/img/reactions/pissed.png\">\n            <img *ngIf=\"review.rating >= 3 && review.rating < 4\" alt=\"User Image\" src=\"assets/img/reactions/soso.png\">\n            <img *ngIf=\"review.rating >= 4\" alt=\"User Image\" alt=\"User Image\" src=\"assets/img/reactions/loved.png\">\n            <div class=\"nameDate\">\n                <h1>{{review.name}}</h1>\n                <h3>{{review.date | date: 'dd/MM/yyyy'}}</h3>\n            </div>\n            <h2>{{review.rating}}</h2>\n        </div>\n        <p>{{review.comments}}</p>\n    </mat-card>\n</div>\n"
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-a91c6d3f0827c070167673bf8354d127",
            "file": "src/app/views/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar",
            "styleUrls": [
                "./toolbar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./toolbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Title",
                    "defaultValue": "\"Meat\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent {\n    public Title: string = \"Meat\"\n    constructor() { }\n\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\n    background-color: #f44336;\n    color: #ffffff;\n}\n.toolbar {\n    margin: 0;\n}\n.active {\n    height: 100%;\n    background-color: #d1271b;\n}\nul {\n    text-align: center;\n    height: 100%;\n}\nli {\n    list-style: none;\n    float: left;\n    margin-left: 0.3em;\n    width: 100px;\n\n    align-items: center;\n    justify-content: center;\n}\nli a {\n    text-decoration: none;\n    display: block;\n    color: #ffffff;\n    font-size: 14px;\n    font-weight: 400;\n    margin-top: 15px;\n}\nspan a {\n    text-decoration: none;\n    display: block;\n    color: #ffffff;\n    margin-right: 20px;\n}\n",
                    "styleUrl": "./toolbar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<mat-toolbar class=\"header\">\n    <mat-toolbar-row class=\"toolbar\">\n        <span><a [routerLink]=\"['/']\">{{Title}}</a></span>\n        <ul>\n            <li routerLinkActive=\"active\"><a [routerLink]=\"['/restaurants']\">Restaurantes</a></li>\n            <li routerLinkActive=\"active\"><a [routerLink]=\"['/about']\">Sobre</a></li>\n        </ul>\n    </mat-toolbar-row>\n</mat-toolbar>\n"
        },
        {
            "name": "ToolbarStorie",
            "id": "component-ToolbarStorie-da2d0b72b67bfb4f7f92528f24248dca",
            "file": "src/app/views/toolbar/stories/toolbar.storie.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar-storie",
            "styleUrls": [
                "./toolbar.storie.css"
            ],
            "styles": [],
            "templateUrl": [
                "./toolbar.storie.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-toolbar-storie',\n    templateUrl: './toolbar.storie.html',\n    styleUrls: ['./toolbar.storie.css']\n})\nexport class ToolbarStorie {\n    public Title: string;\n    constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\n    background-color: #f44336;\n    color: #ffffff;\n}\n.toolbar {\n    margin: 0;\n}\n.active {\n    height: 100%;\n    background-color: #d1271b;\n}\nul {\n    text-align: center;\n    height: 100%;\n}\nli {\n    list-style: none;\n    float: left;\n    margin-left: 0.3em;\n    width: 100px;\n\n    align-items: center;\n    justify-content: center;\n}\nli a {\n    text-decoration: none;\n    display: block;\n    color: #ffffff;\n    font-size: 14px;\n    font-weight: 400;\n    margin-top: 15px;\n}\nspan a {\n    text-decoration: none;\n    display: block;\n    color: #ffffff;\n    margin-right: 20px;\n}\n",
                    "styleUrl": "./toolbar.storie.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<mat-toolbar class=\"header\">\n    <mat-toolbar-row class=\"toolbar\">\n        <span><a href=\"#\">{{Title}}</a></span>\n        <ul>\n            <li routerLinkActive=\"active\"><a href=\"#\">Restaurantes</a></li>\n            <li routerLinkActive=\"active\"><a href=\"#\">Sobre</a></li>\n        </ul>\n    </mat-toolbar-row>\n</mat-toolbar>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "RestaurantCreatComponent"
                        },
                        {
                            "name": "RestaurantDetailComponent"
                        },
                        {
                            "name": "RestaurantsComponent"
                        },
                        {
                            "name": "ReviewsComponent"
                        },
                        {
                            "name": "ToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "CardComButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/home/stories/home.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n    component: HomeStorie,\n    decorators: [\n        moduleMetadata({\n            declarations: [],\n            imports: [CommonModule, MatButtonModule, MatCardModule]\n        })\n    ],\n\n})"
            },
            {
                "name": "CardComButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/menu/stories/menu.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n    component: MenuStorie,\n    pros: {\n        menu: Menu\n    },\n    decorators: [\n        moduleMetadata({\n            declarations: [],\n            imports: [CommonModule, MatCardModule]\n        })\n    ],\n\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/footer/stories/footer.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n    component: FooterComponent\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "MEAT_API",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.api.ts",
                "type": "string",
                "defaultValue": "'http://localhost:3000'"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/menu/stories/menu.stories.ts",
                "type": "[]",
                "defaultValue": "[{\n    id: \"cup-cake\",\n    imagePath: \"assets/img/foods/cupcake.png\",\n    name: \"Cup Cake\",\n    description: \"Cup Cake recheado de Doce de Leite\",\n    price: 8.7,\n    restaurantId: \"bread-bakery\"\n}]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/views/toolbar/stories/toolbar.stories.ts",
                "type": "",
                "defaultValue": "() => ({\n    component: ToolbarStorie,\n    pros: {\n        Title: \"Teste\"\n    },\n    decorators: [\n        moduleMetadata({\n            declarations: [],\n            imports: [CommonModule, MatToolbarModule]\n        })\n    ],\n    docs: {\n        description: {\n            story: 'some story **markdown**'\n        }\n    },\n\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/views/home/stories/home.stories.ts": [
                {
                    "name": "CardComButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/home/stories/home.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n    component: HomeStorie,\n    decorators: [\n        moduleMetadata({\n            declarations: [],\n            imports: [CommonModule, MatButtonModule, MatCardModule]\n        })\n    ],\n\n})"
                }
            ],
            "src/app/views/menu/stories/menu.stories.ts": [
                {
                    "name": "CardComButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/menu/stories/menu.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n    component: MenuStorie,\n    pros: {\n        menu: Menu\n    },\n    decorators: [\n        moduleMetadata({\n            declarations: [],\n            imports: [CommonModule, MatCardModule]\n        })\n    ],\n\n})"
                },
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/menu/stories/menu.stories.ts",
                    "type": "[]",
                    "defaultValue": "[{\n    id: \"cup-cake\",\n    imagePath: \"assets/img/foods/cupcake.png\",\n    name: \"Cup Cake\",\n    description: \"Cup Cake recheado de Doce de Leite\",\n    price: 8.7,\n    restaurantId: \"bread-bakery\"\n}]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/views/footer/stories/footer.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/footer/stories/footer.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n    component: FooterComponent\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/app.api.ts": [
                {
                    "name": "MEAT_API",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.api.ts",
                    "type": "string",
                    "defaultValue": "'http://localhost:3000'"
                }
            ],
            "src/app/views/toolbar/stories/toolbar.stories.ts": [
                {
                    "name": "Toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/views/toolbar/stories/toolbar.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\n    component: ToolbarStorie,\n    pros: {\n        Title: \"Teste\"\n    },\n    decorators: [\n        moduleMetadata({\n            declarations: [],\n            imports: [CommonModule, MatToolbarModule]\n        })\n    ],\n    docs: {\n        description: {\n            story: 'some story **markdown**'\n        }\n    },\n\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "restaurants",
                        "component": "RestaurantsComponent"
                    },
                    {
                        "path": "about",
                        "component": "AboutComponent"
                    },
                    {
                        "path": "restaurants/:id",
                        "component": "RestaurantDetailComponent",
                        "children": [
                            {
                                "path": "",
                                "redirectTo": "menu",
                                "pathMatch": "full"
                            },
                            {
                                "path": "menu",
                                "component": "MenuComponent"
                            },
                            {
                                "path": "reviews",
                                "component": "ReviewsComponent"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MEAT_API",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.error-handler.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ErrorHandler",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/views/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/views/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/views/footer/stories/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/home/stories/home.storie.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeStorie",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/home/stories/home.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardComButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/menu/menu.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/views/menu/menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MenuService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/menu/stories/menu.storie.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuStorie",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/menu/stories/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardComButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/menu/stories/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/restaurant-detail/restaurant-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RestaurantDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/restaurants/restaurant-creat/restaurant-creat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RestaurantCreatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/restaurants/restaurant-creat/restaurant.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Restaurant",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/views/restaurants/restaurant.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RestaurantService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/views/restaurants/restaurants.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RestaurantsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/reviews/reviews.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReviewsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/reviews/reviews.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Review",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/views/reviews/reviews.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ReviewsService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/toolbar/stories/toolbar.storie.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarStorie",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/views/toolbar/stories/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/views/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}